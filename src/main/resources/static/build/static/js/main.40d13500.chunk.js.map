{"version":3,"sources":["Components/SelectSymbols/SelectSymbolsStyles.tsx","constants.ts","Components/SelectSymbols/SelectSymbols.tsx","Components/Tweets/TweetsStyles.tsx","Components/Tweets/Tweets.tsx","App.tsx","index.tsx"],"names":["SelectSymbolsDiv","styled","div","InputDiv","SymbolInput","input","AddSymbolBtn","a","TagsHeader","h1","SymbolTagsDiv","TagDiv","SymbolName","h3","FormError","strong","TweetCounter","i","SelectSymbols","context","useContext","Context","useState","currentSymbol","setCurrentSymbol","allSymbols","setAllSymbols","compErrors","setCompErrors","tweets","setTweets","tweetCounter","setTweetCounter","handleAddNewSymbol","includes","length","axios","get","response","status","newTweets","data","messages","dispatch","type","payload","symbol","mentions","value","onChange","event","newValue","currentTarget","toUpperCase","handleInputChange","href","onClick","preventDefault","map","counter","find","count","deletedSymbol","newSymbols","filter","tweet","newTweetCounter","handleDeleteTag","TweetsDiv","MessageDiv","Username","CreatedAt","Body","p","Avatar","img","NoTweets","TweetSymbol","DateDiv","UserDiv","Tweets","state","key","id","src","user","avatar_url","username","body","created_at","initState","React","createContext","reducer","action","App","useReducer","Provider","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d13500.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { GLOBAL_RED, PRIMARY_GREY } from \"../../constants\";\n\nexport const SelectSymbolsDiv = styled.div `\ndisplay:flex;\nflex-direction:column;\n`\n\nexport const InputDiv = styled.div `\ndisplay:flex;\nflex-direction:row;\nalign-self:center;\njustify-content:center;\n`\n\nexport const SymbolInput = styled.input `\nfont-size:24px;\nwidth:40%;\ntext-align:center;\n`\n\nexport const AddSymbolBtn = styled.a `\ndisplay:flex;\nalign-items:center;\njustify-content:center;\ntext-decoration:none;\ncolor:white;\nbackground-color: #035aa6;\npadding: 0.25em 0.5em 0.25em 0.5em;\nmargin-left:1em;\nborder-radius:10px;\n`\n\nexport const TagsHeader = styled.h1 `\nfont-size:2em;\nmargin:0;\n`\n\nexport const SymbolTagsDiv = styled.div `\ndisplay:flex;\nflex-direction:row;\nflex-wrap:wrap;\n`\n\nexport const TagDiv = styled.a `\ncolor:black;\ntext-decoration:none;\nbackground-color:${PRIMARY_GREY};\npadding:0.5em;\nborder-radius:10px;\nmargin:1em;\n\n:hover {\n    background-color:${GLOBAL_RED};\n}\n`\n\nexport const SymbolName = styled.h3 `\nmargin:0;\nfont-size:2em;\n`\n\nexport const FormError = styled.strong `\ncolor:red;\nfont-size:1em;\ntext-align:center;\nmargin-top:0.5em;\n`\n\nexport const TweetCounter = styled.i `\nfont-size:0.75em;\ncolor:grey;\n`","export const BACKGROUND_GREY = \"#f7f7f7\"\nexport const PRIMARY_GREY = \"#dbdbdb\"\nexport const GLOBAL_RED = \"#eb4559\"","import React , {FC, useState, useContext, useEffect} from \"react\";\nimport { \n    SelectSymbolsDiv,\n    SymbolInput, \n    AddSymbolBtn, \n    SymbolTagsDiv, \n    TagDiv, \n    SymbolName, \n    TagsHeader, \n    InputDiv, \n    FormError, \n    TweetCounter\n} from \"./SelectSymbolsStyles\";\nimport axios from \"axios\"\nimport { Context } from \"../../App\";\nimport { ITweet, ITweetCounter } from \"../../interfaces\";\n\nconst SelectSymbols:FC = ():JSX.Element => {\n  const context = useContext(Context);\n  const [currentSymbol , setCurrentSymbol] = useState<string>(\"\");\n  const [allSymbols , setAllSymbols] = useState<string[]>([]);\n  const [compErrors , setCompErrors] = useState<string[]>([]);\n  const [tweets , setTweets] = useState<ITweet[]>([]);\n  const [tweetCounter , setTweetCounter] = useState<ITweetCounter[]>([]);\n    \n    const handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\n            const newValue = event.currentTarget.value.toUpperCase();\n            if (newValue.length > 5){\n                return;\n            }\n            setCurrentSymbol(newValue);\n    }\n\n    const handleDeleteTag = (deletedSymbol: string) => {\n      const newSymbols = allSymbols.filter(symbol => symbol !== deletedSymbol)\n\t\t  setAllSymbols(newSymbols);\n\t\tconst newTweets = tweets.filter(tweet => tweet.symbol !== deletedSymbol);\n\t\t\tcontext.dispatch({\n\t\t\t\ttype: \"UPDATE_TWEETS\" ,\n\t\t\t\tpayload : [...newTweets]\n\t\t\t})\n        setTweets([...newTweets])\n                \n        const newTweetCounter = tweetCounter.filter(counter => counter.symbol !== deletedSymbol);\n        setTweetCounter(newTweetCounter);\n    }\n\n    const handleAddNewSymbol = async () => {\n        setCompErrors([]);\n        if (allSymbols.includes(currentSymbol)){\n            setCompErrors([...compErrors , \"repeat\"])\n            return;\n        }\n        if (currentSymbol.length > 2 && currentSymbol.length < 6){\n            try{\n\t\t\t\t\t\t\tconst response = await axios.get(`/get-tweets-by-symbol?symbol=${currentSymbol}`)\n            \tif (response.status === 200){\n\t\t\t\t\t\t\t\tconst newTweets = [...response.data.messages , ...tweets ];\n\t\t\t\t\t\t\t\tcontext.dispatch({\n\t\t\t\t\t\t\t\ttype: \"UPDATE_TWEETS\" , \n\t\t\t\t\t\t\t\tpayload : newTweets\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\tsetTweets(newTweets);\n\t\t\t\t\t\t\t\t\t\tsetTweetCounter([...tweetCounter , {symbol : currentSymbol , mentions : response.data.messages.length}])\n                    setAllSymbols([...allSymbols , currentSymbol ])\n\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\t\t\tsetCompErrors([...compErrors , \"not200\"])\n\t\t\t\t\t\t\t}\n        }\n        setCurrentSymbol(\"\")\n    }\n\n    return (\n        <SelectSymbolsDiv>\n            <InputDiv>\n                <SymbolInput type =\"text\" value={currentSymbol} onChange={(event:React.FormEvent<HTMLInputElement>) => {handleInputChange(event)}}/>\n                <AddSymbolBtn href=\"\" onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {event.preventDefault(); handleAddNewSymbol();}}>\n                    Add Symbol\n                </AddSymbolBtn>\n            </InputDiv>\n            {\n                compErrors.includes(\"repeat\") && <FormError>You already added that symbol.</FormError>\n            }\n            {\n                compErrors.includes(\"not200\") && <FormError>Ops! Something went wrong. Try again.</FormError>\n            }\n\t\t\t\t\t\t {\n                allSymbols.length > 0 && <TagsHeader>Tags You Have Selected:</TagsHeader>\n            }\n            <SymbolTagsDiv>\n                {\n                    allSymbols.length > 0 &&\n                    allSymbols.map(symbol =>{\n\t\t\t\t\t\t\t\t\t\t\tconst counter = tweetCounter.find(count => count.symbol === symbol)\n                        return(\n                            <TagDiv href=\"\" onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {event.preventDefault(); handleDeleteTag(symbol);}}>\n                                <SymbolName>{symbol} <TweetCounter>{counter && counter.mentions} / 10</TweetCounter></SymbolName>\n                            </TagDiv>\n                        )\n                    })\n                }\n            </SymbolTagsDiv>\n        </SelectSymbolsDiv>\n    )\n}\n\nexport default SelectSymbols;","import styled from \"styled-components\"\n\nexport const TweetsDiv = styled.div `\nwidth:80%;\nmargin:auto;\n\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\n`\n\nexport const MessageDiv = styled.div `\nwidth:70%;\nborder-radius:10px;\nmargin:0.5em;\npadding:1em;\ndisplay:flex;\nflex-direction:row;\njustify-content:space-evenly;\nalign-items:center;\n`\n\nexport const Username = styled.strong `\n\n`\n\nexport const CreatedAt = styled.i `\n\n`\n\nexport const Name = styled.strong `\n\n`\n\nexport const Body = styled.p `\nwidth:60%;\n`\n\nexport const Avatar = styled.img `\nborder-radius:30px;\nmargin:0.5em;\n`\n\nexport const NoTweets = styled.h1 `\ntext-align:center;\n`\n\nexport const TweetSymbol = styled.strong `\nalign-self:flex-end;\nbackground-color:lightgrey;\npadding:0.5em;\nborder-radius:10px;\n`\n\nexport const DateDiv = styled.div `\ndisplay:flex;\nflex-direction:column;\njustify-content:space-between;\njustify-self:flex-end;\n`\n\nexport const UserDiv = styled.div `\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\nmargin-right: 1.5em;\n`","import React , {FC, useContext} from \"react\"\nimport { Context } from \"../../App\";\nimport { \n    TweetsDiv,\n    MessageDiv, \n    Avatar, \n    Username, \n    Body, \n    CreatedAt, \n    NoTweets, \n    UserDiv, \n    DateDiv, \n    TweetSymbol \n} from \"./TweetsStyles\";\nimport { ITweet } from \"../../interfaces\";\n\nconst Tweets:FC = ():JSX.Element => {\n    const context = useContext(Context)\n\n    return (\n        <TweetsDiv>\n            {\n                context.state.length < 1 &&\n                <NoTweets>No Tweets</NoTweets>\n            }\n            {\n                context.state.length > 0 &&\n                    context.state.map((tweet: ITweet) => {\n                        return (\n                            <MessageDiv key={tweet.id}>\n                                <UserDiv>\n                                    <Avatar src={tweet.user.avatar_url}/>\n                                    <Username>@{tweet.user.username}</Username>\n                                </UserDiv>\n                                <Body>{tweet.body}</Body>\n                                <DateDiv>\n                                    <CreatedAt>{tweet.created_at}</CreatedAt>\n                                    <TweetSymbol>{tweet.symbol}</TweetSymbol>\n                                </DateDiv>\n                            </MessageDiv>\n                        )\n                    })     \n            }\n        </TweetsDiv>\n    )\n}\n\nexport default Tweets;","import React , {FC , useReducer} from 'react';\nimport SelectSymbols from './Components/SelectSymbols/SelectSymbols';\nimport { ITweet, ActionInterface } from './interfaces';\nimport Tweets from './Components/Tweets/Tweets';\n\nconst initState:(string|number)[] = []\nexport const Context = React.createContext<any>(initState);\n  \nconst reducer = (state:ITweet, action:ActionInterface) => {\n  const {type, payload} = action;\n  \n  switch (type){\n      case \"UPDATE_TWEETS\":\n          return [...payload]\n      default:\n          return state;\n  }\n}\n\nconst App:FC = ():JSX.Element => {\n  const [state,dispatch] = useReducer<any>(reducer, initState)\n\n  return (\n    <Context.Provider value={{state , dispatch}}>\n      <h1 className=\"pageHeader\">StockTwits API Challenge</h1>\n      <SelectSymbols/>\n      <Tweets/>\n    </Context.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}